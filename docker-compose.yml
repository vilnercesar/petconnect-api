# docker-compose.yml

services:
  
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/code/app
      - ./backend/create_admin.py:/code/create_admin.py
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy

#  frontend:
#   build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    ports:
      
#      - "5173:80"
#    depends_on:
#      - api 

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
